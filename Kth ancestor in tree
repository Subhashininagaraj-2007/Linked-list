class Solution {
     public boolean getPath(Node root, int target, ArrayList<Integer> result) {
        if (root == null) {
            return false;
        }
        if (root.data == target) {
            return true;
        }
        
        result.add(root.data);
        boolean left = getPath(root.left, target, result);
        boolean right = getPath(root.right, target, result);
        if (!left && !right) {
            result.remove(result.size() - 1);
            return false;
        }
        return true;
    }
    
    public int kthAncestor(Node root, int k, int node) {
             ArrayList<Integer> result = new ArrayList<>();
        getPath(root, node, result);
        Collections.reverse(result);
        if (k > result.size()) {
            return -1;
        }
        return result.get(k - 1);
    }
}
